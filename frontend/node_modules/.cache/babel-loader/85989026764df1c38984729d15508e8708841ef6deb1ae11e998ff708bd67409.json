{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaym\\\\Downloads\\\\newonlinecanteen\\\\newonlinecanteen\\\\frontend\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getAllUsers, createUser, updateUser, deleteUser } from '../utils/userService';\n\n// Mock data to use when the API is unavailable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MOCK_USERS = [{\n  userId: 1,\n  name: 'John Doe',\n  email: 'john.doe@example.com',\n  password: '********'\n}, {\n  userId: 2,\n  name: 'Jane Smith',\n  email: 'jane.smith@example.com',\n  password: '********'\n}, {\n  userId: 3,\n  name: 'Michael Johnson',\n  email: 'michael.johnson@example.com',\n  password: '********'\n}, {\n  userId: 4,\n  name: 'Emily Davis',\n  email: 'emily.davis@example.com',\n  password: '********'\n}, {\n  userId: 5,\n  name: 'Robert Wilson',\n  email: 'robert.wilson@example.com',\n  password: '********'\n}];\nconst UserContext = /*#__PURE__*/createContext();\nexport const useUsers = () => {\n  _s();\n  return useContext(UserContext);\n};\n_s(useUsers, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const UserProvider = ({\n  children\n}) => {\n  _s2();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      const data = await getAllUsers();\n      setUsers(data);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching users from API:', err);\n      // Use mock data instead of showing an error\n      setUsers(MOCK_USERS);\n      setError(null);\n      console.log('Using mock user data since the API is unavailable');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Add a user to the database and update state\n  const addUser = async userData => {\n    try {\n      setLoading(true);\n      const newUser = await createUser(userData);\n      setUsers(prevUsers => [...prevUsers, newUser]);\n      return newUser;\n    } catch (err) {\n      console.error('Error adding user:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update a user in the database and update state\n  const editUser = async (id, userData) => {\n    try {\n      setLoading(true);\n      const updatedUser = await updateUser(id, userData);\n      setUsers(prevUsers => prevUsers.map(user => user.userId === parseInt(id) ? updatedUser : user));\n      return updatedUser;\n    } catch (err) {\n      console.error('Error updating user:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a user from the database and update state\n  const removeUser = async id => {\n    try {\n      setLoading(true);\n      await deleteUser(id);\n      setUsers(prevUsers => prevUsers.filter(user => user.userId !== parseInt(id)));\n      return true;\n    } catch (err) {\n      console.error('Error deleting user:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    users,\n    loading,\n    error,\n    refreshUsers: fetchUsers,\n    addUser,\n    editUser,\n    removeUser\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserProvider, \"vvG5G9m+JVa2SSWAm277lQVAKio=\");\n_c = UserProvider;\nexport default UserContext;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","getAllUsers","createUser","updateUser","deleteUser","jsxDEV","_jsxDEV","MOCK_USERS","userId","name","email","password","UserContext","useUsers","_s","UserProvider","children","_s2","users","setUsers","loading","setLoading","error","setError","fetchUsers","data","err","console","log","addUser","userData","newUser","prevUsers","editUser","id","updatedUser","map","user","parseInt","removeUser","filter","value","refreshUsers","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shaym/Downloads/newonlinecanteen/newonlinecanteen/frontend/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getAllUsers, createUser, updateUser, deleteUser } from '../utils/userService';\n\n// Mock data to use when the API is unavailable\nconst MOCK_USERS = [\n  { userId: 1, name: 'John Doe', email: 'john.doe@example.com', password: '********' },\n  { userId: 2, name: 'Jane Smith', email: 'jane.smith@example.com', password: '********' },\n  { userId: 3, name: 'Michael Johnson', email: 'michael.johnson@example.com', password: '********' },\n  { userId: 4, name: 'Emily Davis', email: 'emily.davis@example.com', password: '********' },\n  { userId: 5, name: 'Robert Wilson', email: 'robert.wilson@example.com', password: '********' }\n];\n\nconst UserContext = createContext();\n\nexport const useUsers = () => useContext(UserContext);\n\nexport const UserProvider = ({ children }) => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      const data = await getAllUsers();\n      setUsers(data);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching users from API:', err);\n      // Use mock data instead of showing an error\n      setUsers(MOCK_USERS);\n      setError(null);\n      console.log('Using mock user data since the API is unavailable');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Add a user to the database and update state\n  const addUser = async (userData) => {\n    try {\n      setLoading(true);\n      const newUser = await createUser(userData);\n      setUsers(prevUsers => [...prevUsers, newUser]);\n      return newUser;\n    } catch (err) {\n      console.error('Error adding user:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update a user in the database and update state\n  const editUser = async (id, userData) => {\n    try {\n      setLoading(true);\n      const updatedUser = await updateUser(id, userData);\n      setUsers(prevUsers => \n        prevUsers.map(user => \n          user.userId === parseInt(id) ? updatedUser : user\n        )\n      );\n      return updatedUser;\n    } catch (err) {\n      console.error('Error updating user:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a user from the database and update state\n  const removeUser = async (id) => {\n    try {\n      setLoading(true);\n      await deleteUser(id);\n      setUsers(prevUsers => prevUsers.filter(user => user.userId !== parseInt(id)));\n      return true;\n    } catch (err) {\n      console.error('Error deleting user:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value = {\n    users,\n    loading,\n    error,\n    refreshUsers: fetchUsers,\n    addUser,\n    editUser,\n    removeUser\n  };\n\n  return (\n    <UserContext.Provider value={value}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}