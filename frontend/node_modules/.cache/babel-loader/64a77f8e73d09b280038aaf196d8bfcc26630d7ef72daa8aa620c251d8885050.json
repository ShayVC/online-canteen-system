{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/shop';\n\n// Mock data for when the API is unavailable\nconst MOCK_SHOPS = [{\n  shop_id: 1,\n  shop_name: 'Coffee Corner',\n  contact_info: 123456789\n}, {\n  shop_id: 2,\n  shop_name: 'Burger Palace',\n  contact_info: 987654321\n}, {\n  shop_id: 3,\n  shop_name: 'Salad Bar',\n  contact_info: 456789123\n}, {\n  shop_id: 4,\n  shop_name: 'Pizza Heaven',\n  contact_info: 789123456\n}, {\n  shop_id: 5,\n  shop_name: 'Sushi Express',\n  contact_info: 321654987\n}];\n\n// Add a delay to simulate API response time\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\nexport const getAllShops = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/dashboard`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shops:', error);\n    // Return mock data\n    await delay(500); // Simulate API delay\n    return MOCK_SHOPS;\n  }\n};\nexport const getShopById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching shop with id ${id}:`, error);\n    // Return mock data for the requested ID\n    const mockShop = MOCK_SHOPS.find(shop => shop.shop_id === parseInt(id));\n    if (mockShop) {\n      await delay(300); // Simulate API delay\n      return mockShop;\n    }\n    throw error;\n  }\n};\nexport const createShop = async shopData => {\n  try {\n    console.log('Sending shop data to API:', shopData);\n    const response = await axios.post(`${API_URL}/createShop`, shopData);\n    console.log('API response for shop creation:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating shop:', error);\n    // Create a mock shop with a new ID and add it to the mock data\n    const newId = Math.max(...MOCK_SHOPS.map(shop => shop.shop_id), 0) + 1;\n    const newShop = {\n      ...shopData,\n      shop_id: newId\n    };\n    MOCK_SHOPS.push(newShop); // Add to mock data array for future reference\n    console.log('Created mock shop:', newShop);\n    await delay(500); // Simulate API delay\n    return newShop;\n  }\n};\nexport const updateShop = async (id, shopData) => {\n  try {\n    console.log(`Updating shop with id ${id}:`, shopData);\n    const response = await axios.put(`${API_URL}/updateShop/${id}`, shopData);\n    console.log('API response for shop update:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating shop with id ${id}:`, error);\n    // Update the shop in the mock data array\n    const shopIndex = MOCK_SHOPS.findIndex(shop => shop.shop_id === parseInt(id));\n    const updatedShop = {\n      ...shopData,\n      shop_id: parseInt(id)\n    };\n    if (shopIndex !== -1) {\n      MOCK_SHOPS[shopIndex] = updatedShop;\n      console.log('Updated mock shop:', updatedShop);\n    }\n    await delay(500); // Simulate API delay\n    return updatedShop;\n  }\n};\nexport const deleteShop = async id => {\n  try {\n    console.log(`Deleting shop with id ${id}`);\n    await axios.delete(`${API_URL}/deleteShop/${id}`);\n    console.log(`Shop with id ${id} deleted successfully`);\n    return true;\n  } catch (error) {\n    console.error(`Error deleting shop with id ${id}:`, error);\n    // Remove the shop from the mock data array\n    const shopIndex = MOCK_SHOPS.findIndex(shop => shop.shop_id === parseInt(id));\n    if (shopIndex !== -1) {\n      MOCK_SHOPS.splice(shopIndex, 1);\n      console.log(`Removed shop with id ${id} from mock data`);\n    }\n    await delay(500); // Simulate API delay\n    return true;\n  }\n};","map":{"version":3,"names":["axios","API_URL","MOCK_SHOPS","shop_id","shop_name","contact_info","delay","ms","Promise","resolve","setTimeout","getAllShops","response","get","data","error","console","getShopById","id","mockShop","find","shop","parseInt","createShop","shopData","log","post","newId","Math","max","map","newShop","push","updateShop","put","shopIndex","findIndex","updatedShop","deleteShop","delete","splice"],"sources":["C:/Users/shaym/Downloads/newonlinecanteen/newonlinecanteen/frontend/src/utils/shopService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/shop';\n\n// Mock data for when the API is unavailable\nconst MOCK_SHOPS = [\n  { shop_id: 1, shop_name: 'Coffee Corner', contact_info: 123456789 },\n  { shop_id: 2, shop_name: 'Burger Palace', contact_info: 987654321 },\n  { shop_id: 3, shop_name: 'Salad Bar', contact_info: 456789123 },\n  { shop_id: 4, shop_name: 'Pizza Heaven', contact_info: 789123456 },\n  { shop_id: 5, shop_name: 'Sushi Express', contact_info: 321654987 }\n];\n\n// Add a delay to simulate API response time\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const getAllShops = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/dashboard`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shops:', error);\n    // Return mock data\n    await delay(500); // Simulate API delay\n    return MOCK_SHOPS;\n  }\n};\n\nexport const getShopById = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching shop with id ${id}:`, error);\n    // Return mock data for the requested ID\n    const mockShop = MOCK_SHOPS.find(shop => shop.shop_id === parseInt(id));\n    if (mockShop) {\n      await delay(300); // Simulate API delay\n      return mockShop;\n    }\n    throw error;\n  }\n};\n\nexport const createShop = async (shopData) => {\n  try {\n    console.log('Sending shop data to API:', shopData);\n    const response = await axios.post(`${API_URL}/createShop`, shopData);\n    console.log('API response for shop creation:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating shop:', error);\n    // Create a mock shop with a new ID and add it to the mock data\n    const newId = Math.max(...MOCK_SHOPS.map(shop => shop.shop_id), 0) + 1;\n    const newShop = { ...shopData, shop_id: newId };\n    MOCK_SHOPS.push(newShop); // Add to mock data array for future reference\n    console.log('Created mock shop:', newShop);\n    await delay(500); // Simulate API delay\n    return newShop;\n  }\n};\n\nexport const updateShop = async (id, shopData) => {\n  try {\n    console.log(`Updating shop with id ${id}:`, shopData);\n    const response = await axios.put(`${API_URL}/updateShop/${id}`, shopData);\n    console.log('API response for shop update:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating shop with id ${id}:`, error);\n    // Update the shop in the mock data array\n    const shopIndex = MOCK_SHOPS.findIndex(shop => shop.shop_id === parseInt(id));\n    const updatedShop = { ...shopData, shop_id: parseInt(id) };\n    \n    if (shopIndex !== -1) {\n      MOCK_SHOPS[shopIndex] = updatedShop;\n      console.log('Updated mock shop:', updatedShop);\n    }\n    \n    await delay(500); // Simulate API delay\n    return updatedShop;\n  }\n};\n\nexport const deleteShop = async (id) => {\n  try {\n    console.log(`Deleting shop with id ${id}`);\n    await axios.delete(`${API_URL}/deleteShop/${id}`);\n    console.log(`Shop with id ${id} deleted successfully`);\n    return true;\n  } catch (error) {\n    console.error(`Error deleting shop with id ${id}:`, error);\n    // Remove the shop from the mock data array\n    const shopIndex = MOCK_SHOPS.findIndex(shop => shop.shop_id === parseInt(id));\n    \n    if (shopIndex !== -1) {\n      MOCK_SHOPS.splice(shopIndex, 1);\n      console.log(`Removed shop with id ${id} from mock data`);\n    }\n    \n    await delay(500); // Simulate API delay\n    return true;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}